function [GX,GY,GZ]=NS_EstimatePotentialSecondDev(Amplitudes,elX,elY,elZ,x0,y0,z0);
%The function calcuates the total gradient of potential field generated by several
%point sources of current.
%Amplitudes - amplitude for each point source
%elX, elY, elZ - coordinates of the point sources 
%x0,y0,z0 - coordinates of the point where the gradient should be estimated

%ArrayID=1; %61-channel
%electrodeMap=edu.ucsc.neurobiology.vision.electrodemap.ElectrodeMapFactory.getElectrodeMap(ArrayID)
%for i=1:length(electrodes)
%    elX(i)=electrodeMap.getXPosition(electrodes(i));
%    elY(i)=electrodeMap.getYPosition(electrodes(i));
%end
GX=0;
GY=0;
GZ=0;
G=zeros(1,length(Amplitudes));
Gx=G;
Gy=G;
Gz=G;
for i=1:length(Amplitudes)
    G(i)=2*Amplitudes(i)/((elX(i)-x0)^2+(elY(i)-y0)^2+(elZ(i)-z0^2))^3/2; %absolute value
    
    D2x(i)=G(i)*(elX(i)-x0)/sqrt((elX(i)-x0)^2+(elY(i)-y0)^2+(elZ(i)-z0^2));
    Gy(i)=G(i)*(elY(i)-y0)/sqrt((elX(i)-x0)^2+(elY(i)-y0)^2+(elZ(i)-z0^2));
    Gz(i)=G(i)*z0/sqrt((elX(i)-x0)^2+(elY(i)-y0)^2+(elZ(i)-z0^2));
    GX=GX+Gx(i);
    GY=GY+Gy(i);
    GZ=GZ+Gz(i);
end

Grad=sqrt(GX^2+GY^2+GZ^2);