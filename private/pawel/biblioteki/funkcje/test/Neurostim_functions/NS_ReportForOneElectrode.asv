function [Ind,Traces]=NS_ReportForOneElectrode(FileName,Movies,StimulationElectrodeNumber,RecordingElectrodes,NS_GlobalConstants);
%It is assumed that for the first two movies the largest cluster
%corresponds to artifact!!

Offsets=ones(length(RecordingElectrodes))*(-370);
TimeStart=8;
NumberOfSamples=30;
Dimensions=2; %number of dimensions for PCA
NumberOfClusters=2;
Threshold=1; %Threshold parameter value for NS_CleanCluster function 
SpikeThreshold=3000;
PreviousAmplitudes=zeros(2);
PreviousArtifacts=zeros(2,length(RecordingElectrodes),NumberOfSamples);
figure(15);
for i=1:2
    subplot(1,2,i);
    [Timings,PDChunkIndex]=NS_FindPulsesTimingsForMovie(FileName,StimulationElectrodeNumber,Movies(i),NS_GlobalConstants);
    [Pulse,Status]=NS_FindPulseShapeForMovie(FileName,StimulationElectrodeNumber,Movies(i),NS_GlobalConstants);
    [Amplitude,PlotPointer]=NS_PlotStimulationPulse(Pulse,Status,StimulationElectrodeNumber,0,1,'b-',NS_GlobalConstants);
    PreviousAmplitudes(i)=Amplitude;

    Traces=NS_ReadManyTracesFromRaw(FileName,RecordingElectrodes,Timings,TimeStart,NumberOfSamples,Offsets,NS_GlobalConstants);
    Vectors=NS_ConcacenateWaveforms(Traces); % to combine traces from all the recording channels so that the combined vector can be used for PCA
    [Types,PCA_Coeffs,Inc]=NS_ClusterSignatures(Vectors,Dimensions,NumberOfClusters);
    Ind1=find(Types==1);
    Ind2=find(Types==2);
    if length(Ind1)>length(Ind2)
        IndLonger=Ind1;
    else
        IndLonger=Ind2;
    end                
    [Ind,a]=NS_CleanCluster(PCA_Coeffs(IndLonger,:),Threshold);
    EI=NS_CalculateEI(Traces(Ind,:,:));
    PreviousArtifacts(i,:,:)=EI;
    %subplot(1,2,i);
    plot(EI');
end
figure(26)
clf
subplot(6,6,36);
plot(1,1,1,2,1,3,1,4,1,5,1,6,1,7);
leg={};
for i=1:length(RecordingElectrodes)
    str=num2str(RecordingElectrodes(i));
    leg=[leg str];
end
l=legend(leg);
set(l,'FontSize',8);
h=gcf;
a=gca;
set(a,'Visible','off');
for i=3:length(Movies)
    [Timings,PDChunkIndex]=NS_FindPulsesTimingsForMovie(FileName,StimulationElectrodeNumber,Movies(i),NS_GlobalConstants);
    [Pulse,Status]=NS_FindPulseShapeForMovie(FileName,StimulationElectrodeNumber,Movies(i),NS_GlobalConstants);
    figure(20);
    subplot(6,6,i);
    [Amplitude,PlotPointer]=NS_PlotStimulationPulse(Pulse,Status,StimulationElectrodeNumber,0,1,'b-',NS_GlobalConstants);
    %PreviousAmplitudes(1)=PreviousAmplitudes(2);
    %PreviousAmplitudes(2)=Amplitude;

    Traces=NS_ReadManyTracesFromRaw(FileName,RecordingElectrodes,Timings,TimeStart,NumberOfSamples,Offsets,NS_GlobalConstants);
    %dodac kontrole ksztaltu impulsu!!!!
    figure(26);
    subplot(6,6,i);
    NewTraces=NS_PredictAndSubtractArtifact(Traces,Amplitude,PreviousArtifacts(1,:,:),PreviousAmplitudes(1),PreviousArtifacts(2,:,:),PreviousAmplitudes(2));    
    PreviousAmplitudes(1)=PreviousAmplitudes(2);
    PreviousAmplitudes(2)=Amplitude;
    Indexes=NS_FindNeuronsInMovie(NewTraces,SpikeThreshold);
    i
    IndArtifact=find(Indexes==0);
    ilosc_artefaktow=length(IndArtifact)
    ArtifactTraces=NewTraces(IndArtifact,:,:);
    SNT=size(ArtifactTraces);
    p=reshape(ArtifactTraces(:,2,:),SNT(1),SNT(3));
    p=reshape(mean(ArtifactTraces),SNT(2),SNT(3));
    %SN=size(NewTraces);
    %p=reshape(Traces(:,1,:),SN(1),SN(3));
    %sp=size(p)
    %plot(mean(p));
    plot(p');
    if Amplitude <0.1
        text(20,50,[num2str(Amplitude*1000,'%2.0f') 'nA']);
    else
        text(15,50,[num2str(Amplitude,'%2.3f') 'uA']);
    end
    %grid on;
    a1=gca;
    set(a1,'ylim',[-100 100]);
    set(a1,'xlim',[0 NumberOfSamples]);
    
    set(h,'XTickLabel',[]);
            %set(h,'YTickLabel',[]);
    figure(27);
    plot(p');
    if Amplitude <0.1
        text(20,10,[num2str(Amplitude*1000,'%2.0f') 'nA']);
    else
        text(15,10,[num2str(Amplitude,'%2.3f') 'uA']);
    end
    %grid on;
    a1=gca;
    set(a1,'ylim',[-20 20]);
    set(a1,'xlim',[0 NumberOfSamples]);
        
    size(IndArtifact);
    %Vectors=NS_ConcacenateWaveforms(Traces(IndArtifact,:,:));
    %[Types,PCA_Coeffs,Inc]=NS_ClusterSignatures(Vectors,Dimensions,NumberOfClusters);    
    %[Ind,a]=NS_CleanCluster(PCA_Coeffs(IndLonger,:),Threshold);
    EI=NS_CalculateEI(Traces(IndArtifact,:,:));
    PreviousArtifacts(1,:,:)=PreviousArtifacts(2,:,:);
    PreviousArtifacts(2,:,:)=EI;    
    %Vectors=NS_ConcacenateWaveforms(Traces); % to combine traces from all the recording channels so that the combined vector can be used for PCA
    %[Types,PCA_Coeffs,Inc]=NS_ClusterSignatures(Vectors,Dimensions,NumberOfClusters);
end

%name=['C:\pawel\pliki\nauka\analiza\2008-03-18saline\ArtifactSubtraction2008-03-20\' num2str(StimulationElectrodeNumber)];
figure(26);
h=gcf;
name=['C:\praca\analiza\2008-03-18saline\' num2str(StimulationElectrodeNumber) '_Large'];
print( h, '-dtiff', name);
figure(27);
h=gcf;
name=['C:\praca\analiza\2008-03-18saline\' num2str(StimulationElectrodeNumber)];
print( h, '-dtiff', name);

%subplot(6,6,1);
%plot(1,0,1,1,1,2,1,3,1,4,1,5,1,6);
Ind=Indexes;
Ind=p;