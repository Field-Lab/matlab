function [Responses,Noise]=NS512_ApplyLinearArtifactModel3(DataPath,ArtifactDataPath,ArtifactSubtraction,PatternNumber,Movies,GoodChannels,Threshold,TracesNumberLimit,EventNumber,ClusterFileName,NS_GlobalConstants);
%DataChannels - data for which channels are saved in the files generated by
%the preprocessing procedure
%GoodChannels - which channels from the DataChannels are of interest for
%the analysis. Values of GoodChannels are simply indexes for the
%DataChannels array.
%StimChannels - responses to stumulation of this channels are of interest
%StChannels - channels stimulated by given pattern

%NS_GlobalConstants=NS_GenerateGlobalConstants(61);
MinSpikesNumber=10;

currentRanges = NS_GlobalConstants.CurrentRanges;
StimChannels=[1:512];

Amplitudes=Movies;

Amplitudes(1)=NS_StimulationAmplitude(DataPath,PatternNumber,Movies(1),StimChannels,NS_GlobalConstants);
[DataTraces,ArtifactDataTraces,Channels]=NS_ReadPreprocessedData(DataPath,ArtifactDataPath,0,PatternNumber,Movies(1),0,0);
Art1=mean(DataTraces);

Amplitudes(2)=NS_StimulationAmplitude(DataPath,PatternNumber,Movies(2),StimChannels,NS_GlobalConstants);
if Amplitudes(2)==Amplitudes(1)
    error('The first two amplititudes are identical')
end
[DataTraces,ArtifactDataTraces,Channels]=NS_ReadPreprocessedData(DataPath,ArtifactDataPath,ArtifactSubtraction,PatternNumber,Movies(2),0,0);
Art2=mean(DataTraces);

A1=Amplitudes(1);
A2=Amplitudes(2);

Samples=[15:120];
%Threshold=25;

Responses=[];

MovieForElectrode=zeros(1,length(GoodChannels));
Noise=zeros(1,length(GoodChannels));

for i=3:length(Movies)   
    MovieNumber=Movies(i)
    [DataTraces,ArtifactDataTraces,DataChannels]=NS_ReadPreprocessedData(DataPath,ArtifactDataPath,ArtifactSubtraction,PatternNumber,MovieNumber,0,0);    
    clear ArtifactDataTraces;
    SD=size(DataTraces);
    DataTracesFinal=zeros(SD(1),SD(2),SD(3));
    
    [StChannels,Amplitudes]=NS_StimulatedChannels(DataPath,PatternNumber,MovieNumber,StimChannels,NS_GlobalConstants);
    A=max(Amplitudes);   
    Art=Art2+(A-A2)/(A2-A1)*(Art2-Art1);
    
    for j=1:SD(1)
        DataTracesFinal(j,:,:)=DataTraces(j,:,:)-Art;                   
    end         
    
    FigureProperties=struct('FigureNumber',12,'Subplot',[2 3 3],'TimeRange',[0 65],'AmplitudeRange',[-30 30],'FontSize',16,'Colors',['k' 'r' 'b' 'm' 'g' 'c' 'y'],'LineWidth',1,'YLabel','signal [mV]');
    WaveformTypes=ones(1,SD(1));
    
    if A~=A2        
        Art1Old=Art1; %just for tests!!
        Art2Old=Art2;
        A1=A2;
        A2=A;        
        Art1=Art2;        
        Art2=mean(DataTraces);
    end    
    
    g=DataTraces(:,25,:);
    size(g)
    g1=reshape(g,103,140);
    figure(1)
    plot(g1')
    
    clear DataTraces;
    
    for j=1:length(StChannels)
        DataTracesFinal(:,j,:)=0;
    end
            
    x=DataTracesFinal(:,:,Samples);    
    
    NoiseLocal=mean(std(x,[],3)); %noise in each channel, which is rms value averaged over all the repetitions
      
    clear DataTracesFinal;
    
    mins=min(x,[],3);
    EventsMin=floor((-sign(mins+Threshold)+1)/2); %2-D array - which traces for each electrode go below -Threshold
    maxs=max(x,[],3);
    ThresholdForOvershoot=Threshold/5;
    EventsMax=floor((sign(maxs-ThresholdForOvershoot)+1)/2); %2-D array - which traces for each electrode go above Threshold/3
    find(EventsMax==1);
    
    figure(2)
    plot(EventsMin(:,25))
    figure(3)
    plot(EventsMax(:,25))
    Events=EventsMin.*EventsMax; %2-D array - combination of the two arrays above
    
    EventsPerEl=sum(Events); %how many spikes for each electrode
    ElectrodesWithEnoughSpikes=floor((sign(EventsPerEl-MinSpikesNumber)+1)/2)*MovieNumber; %the electrodes with number of spikes larger than minimal are indexed with MovieNumber, others with 0    
    a=find(MovieForElectrode~=0); %which electrodes HAD enough spikes for lower stimulus amplitude?
    ElectrodesWithEnoughSpikes(a)=MovieForElectrode(a); % for those electrodes that already had the spieks saved, do not save the current movie
    MovieForElectrode=ElectrodesWithEnoughSpikes;    
    NoiseLocal(a)=Noise(a);
    Noise=NoiseLocal;
        %WaveformTypes(EventsFinal)=2;
        %header=NS_SaveClusterFile(ClusterFileName,PatternNumber,Movies(i),WaveformTypes);
        %break;
end  
Responses=MovieForElectrode;