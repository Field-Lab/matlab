function [axon,soma,axon_dists] = generate_predicted_ei(axon,positions, varargin)
% generate_predicted_ei     read in an axon and predict the EI
%
% usage:  ei = generate_predicted_ei(axon,positions, varargin)
%
% arguments:     axon - Nx2 matrix of axon path, starting at soma
%           positions - positions of electrodes
%            varargin - struct or list of optional parameters (see below)
%
% outputs:     ei - E-length vector of EI intensity on each electorde
%
%
% optional params, their default values, and what they specify:
%
% method          	'basic'       	how to compare
%                                       'basic' - ???
%
%
% 2010-01  gauthier
%


% SET UP OPTIONAL ARGUMENTS

p = inputParser;

% specify list of optional parameters
p.addParamValue('method', 'basic');

% resolve user input and default values
p.parse(varargin{:});

% get params struct
params = p.Results;


switch params.method
    case 'basic'
        
        dists = zeros(1,size(positions,1));
        soma = zeros(1,size(positions,1));

        for ee =1:size(positions,1)
            % compute distance from each point to the axon
            axon_dists(ee) = sqrt(min((positions(ee,1)-axon(:,1)).^2 + (positions(ee,2)-axon(:,2)).^2));
            soma(ee) = 5 + 
        end

        % make fake ei
        %ei = (1./(dists + 5)).^1;
        axon = (dists' + 15).^-0.5;
        %ei = (dists + 10).^-1.8;
        %axon = axon';
end
