% AKHEITMAN 2014-11-11
% Generate structure with all cells, don't have to load_data each time
% Simple time saving trick
% Will save the cell_list


BD = NSEM_BaseDirectories;

savedir = sprintf('%s/BD.


%
allcells = cell(4,1);
cellselectiontype = 'all';
for i_exp = 1:4
    
    [exp_nm,~,expname,badcells]  = cell_list( i_exp, cellselectiontype);  
    
    allcells{i_exp,1}.exp_nm = exp_nm;
    allcells{i_exp,1}.expname = expname;
    
    [~, DirPars_WN   datarun_slv_WN   datarun_mas] = Directories_Params_v23_Conv(exp_nm, 'WN', 'mapPRJ',1);
    [~, DirPars_NSEM datarun_slv_NSEM datarun_mas] = Directories_Params_v23_Conv(exp_nm, 'NSEM', 'mapPRJ',1);
    ONP  = intersect(datarun_slv_WN.cell_types{1}.cell_ids , datarun_slv_NSEM.cell_types{1}.cell_ids);
    OFFP = intersect(datarun_slv_WN.cell_types{2}.cell_ids , datarun_slv_NSEM.cell_types{2}.cell_ids);
    for i_cell = 1:length(badcells);
        ONP(find(ONP == badcells(i_cell) )) = [];
        OFFP(find(OFFP == badcells(i_cell) )) = [];
    end
    
    allcells{i_exp,1}.ONP = ONP ; 
    allcells{i_exp,1}.OFFP = OFFP;
end

%
eval(sprintf('s