{\rtf1\ansi\ansicpg1252\cocoartf949
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww15880\viewh13720\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 specify parameters for mcmc\
specify path to prj file\
specify output file name\
\
1. parse prj file and do clustering\
 data = Data(path)\
\
for each electrode\
  electrodeData  = data.getStruct(electrode);\
  imm = Imm(params, electrodeData);\
  map = imm.getMAP\
  clusters(electrode) = imm.getClusters(MAP);\
end\
\
2. add stuff to neurons file\
neuronsFile = NeuronsFile(path);\
\
for each electrode\
  neuronsFile.add(electrode)\
end\
\
neuronsFile.close();\
\
3. if it is enabled in parameters, plot stuff\
plot = Plot(data.getStruct(electrode));\
Plot.toFile(path, name);\
Plot.toScreen(figure);\
\
\
classes + public methods:\
\
These method signatures are out of date, but the methods exist\
\
x Plot.toScreen(figure);\
\
x Imm(params, electrodeData); //do clustering (and is the constructor)\
x Imm.getMAP //returns MAP index\
x Imm.getClusters(iteration); //fit out of sample points, this might be done in java for speed\
o Imm.toFile(iteration); //save nClusters, means, covariances, to a mat file\
\
x Data(path); //open prj file and instantiate Java object to read from it\
x Data.getStruct; //get the data from a particular electrode\
\
xNeuronsFile(path); \
xNeuronsFile.add(electrode); //add a vector of spike times electrode[times] to the neurons file\
\
---\
\
next:\
\
-out of sample fitting fails rarely (why?)\
-fix out of sample calculation\
-convergence test/ more iterations\
\
-profiler/optimize\
\
-compile code for use on other machines /  streamline usage\
\
}