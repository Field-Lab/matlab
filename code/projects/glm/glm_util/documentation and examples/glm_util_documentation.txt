Nora Brackbill
2015-06-18



PATHS NEEDED
Vision.jar, such as javaaddpath('/Applications/Vision.app/Contents/Resources/Java/Vision.jar')
The lab codebase, addpath(genpath('Repo location /matlab/code/lab'))
The glm code folder, addpath(genpath('Repo location /matlab/code/projects/glm))



FUNCTIONS

fittedGLM = glm_fit(fitspikes, fitmovie, center, varargin)
	This takes in a movie, spikes, and location of the cell, and returned a fittedGLM structure.
	The movie must be greyscale, and contain a frame for every 1/120 seconds.
    The spikes need to be aligned to the triggers already.
	If it isn't working, use STA_Test(fitspikes, fitmovie, center_coord) to
	make sure your timing and indexing is right. You also need to pass neighbor spikes and a WN_STA
	if you want to use coupling or a fixed spatial fit, respectively.
	
xval = glm_predict(fittedGLM, testmovie, varargin)
	This takes in a movie and a fittedGLM, and returns predicted spike trains. 
	In addition, if spikes are provided, it calculates bits per spike. The test movie should
	be in the same dimensions as the movie used to fit the cell.
	
fittedGLM = glm_fit_from_WN(cells, dataset, stim, varargin)
	This takes in a dataset name, cell ids, and an string specifying the XML movie, 
	and passes everything needed for glm_fit, and returns the fittedGLM.
	This is currently NOT set up for coupling!
	
[STA, center] = STA_Test(fitspikes, fitmovie, center_verification, tstim)
	Pass the same arguments as you would to glm_fit, and make sure you get an STA. It also returns 
    the location of the cell, either by picking the highest value pixel, or by 
    This checks timing and indexing.
	
plotfilters(fittedGLM)
	Quick look at the fitted filters
	
plotrasters(xval, fittedGLM)
	This takes in the output from glm_predict and glm_fit and plots the rasters, both recorded and predicted, and the PSTH
    It only plots the recorded rasters if you inputted testspikes to glm_predict
	
[RGB_weights, movie] = RGB_to_BW calculates the RGB weights from the STA, and returns a pseudoBW movie.

[GLMType, GLMParams] = glm_parameters contains the architecture of the GLM (eg is there a postspike filter? is there
	coupling? what filter rank? etc) and specific parameters (how many basis filters are there
	for the postspike filter, etc). You can change those things in this function.
	
	
	
TROUBLESHOOTING

0. Read the documentation in the code itself.
1. Check your timing!
	If you haven't aligned things to the triggers properly, it won't work. 
	Use STA_Test to check this. 
2. Check the cell location
    I have had trouble with this indexing. Use STA_Test to either automatically
    determine the cell's location, or to pick it youself using the STA.
3. Check your paths
	Have you added the three folders above? Also, if there is an old 
	glm copy somewhere in your path, the filenames might be interfering.
4. Are you switching between BW, psuedoBW, and color? If so, the intensity and filters 
	might be messed up. Try to use the same type for all three. If you are having problems,
	ask Nora. 
5. Try changing some of the parameters in glm_parameters. If you aren't fitting to a very
	long dataset, you might need to reduce the number of parameters. Ask Nora for tips about this.


